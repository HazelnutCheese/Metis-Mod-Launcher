<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:attached="clr-namespace:ModEngine2ConfigTool.Views.Attached"
                    xmlns:controls="clr-namespace:ModEngine2ConfigTool.Views.Controls"
                    xmlns:converter="clr-namespace:ModEngine2ConfigTool.Views.Converter"
                    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
                    xmlns:views="clr-namespace:ModEngine2ConfigTool.Views">
    <Style x:Key="ProfileButtonStyle" TargetType="{x:Type Button}">
        <Style.Resources>
            <converter:EmptyImagePathConverter x:Key="EmptyImagePathConverter" />
        </Style.Resources>
        <Setter Property="Height" Value="280" />
        <Setter Property="Width" Value="180" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="FrameworkElement.Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <materialDesign:Card x:Name="Grid"
                                         materialDesign:ElevationAssist.Elevation="Dp4"
                                         materialDesign:ShadowAssist.ShadowEdges="Bottom,Right,Left">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="20" />
                                <RowDefinition Height="140" />
                                <RowDefinition Height="20" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="20" />
                                <RowDefinition Height="*" />
                                <RowDefinition Height="20" />
                            </Grid.RowDefinitions>

                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="15" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="15" />
                            </Grid.ColumnDefinitions>

                            <materialDesign:Card Grid.Row="1"
                                                 Grid.Column="1"
                                                 Width="128"
                                                 Height="128"
                                                 HorizontalAlignment="Center"
                                                 VerticalAlignment="Center"
                                                 materialDesign:ElevationAssist.Elevation="Dp4"
                                                 materialDesign:ShadowAssist.ShadowEdges="Bottom,Right,Left">
                                <Image Source="{Binding Profile.ImagePath, Converter={StaticResource EmptyImagePathConverter}, ConverterParameter='Blue'}" Stretch="UniformToFill" />
                            </materialDesign:Card>

                            <Grid Grid.Row="3" Grid.Column="1">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="10" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>

                                <TextBlock VerticalAlignment="Center"
                                           FontSize="16"
                                           FontWeight="Medium"
                                           Foreground="#d1d1d1"
                                           Text="{Binding Name}"
                                           TextTrimming="CharacterEllipsis" />

                                <materialDesign:PopupBox Grid.Column="2"
                                                         VerticalAlignment="Center"
                                                         Background="Gray"
                                                         Content="1"
                                                         Foreground="#d1d1d1">
                                    <StackPanel>
                                        <!--<Button attached:ContextMenuLeftClickBehavior.IsLeftClickEnabled="True" Content="Add mod">
                                            <Button.ContextMenu>
                                                <ContextMenu ItemsSource="{Binding MenuItems}">
                                                    <ContextMenu.ItemContainerStyle>
                                                        <Style TargetType="MenuItem">
                                                            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                                                            <Setter Property="VerticalContentAlignment" Value="Stretch" />
                                                            <Setter Property="Header" Value="{Binding Header}" />
                                                            <Setter Property="Command" Value="{Binding Command}" />
                                                        </Style>
                                                    </ContextMenu.ItemContainerStyle>
                                                </ContextMenu>
                                            </Button.ContextMenu>
                                        </Button>
                                        <Separator />-->
                                        <Button Command="{Binding PlayCommand}" Content="Play" />
                                        <Button Command="{Binding EditCommand}" Content="Edit" />
                                        <Button Command="{Binding CopyCommand}" Content="Duplicate" />
                                        <Button Command="{Binding DeleteCommand}" Content="Delete" />
                                    </StackPanel>
                                </materialDesign:PopupBox>
                            </Grid>

                            <TextBlock Grid.Row="5"
                                       Grid.Column="1"
                                       FontSize="14"
                                       FontWeight="Medium"
                                       Foreground="#d1d1d1"
                                       Text="{Binding Description}"
                                       TextTrimming="CharacterEllipsis"
                                       TextWrapping="Wrap" />


                            <Button x:Name="PlayIcon"
                                    Grid.Row="1"
                                    Grid.Column="1"
                                    Width="90"
                                    Height="90"
                                    Margin="0"
                                    Padding="0"
                                    HorizontalAlignment="Stretch"
                                    VerticalAlignment="Stretch"
                                    materialDesign:ElevationAssist.Elevation="Dp4"
                                    materialDesign:ShadowAssist.ShadowEdges="Bottom,Right,Left"
                                    Background="#202020"
                                    BorderBrush="Transparent"
                                    BorderThickness="0"
                                    Command="{Binding PlayCommand}"
                                    Opacity="0.8">
                                <Grid>
                                    <materialDesign:PackIcon Width="90"
                                                             Height="90"
                                                             Foreground="#ffc969"
                                                             Kind="Play" />
                                </Grid>
                            </Button>
                        </Grid>
                    </materialDesign:Card>

                    <ControlTemplate.Triggers>
                        <Trigger Property="UIElement.IsMouseOver" Value="true">
                            <Setter TargetName="Grid" Property="Background" Value="#252525" />
                            <Setter TargetName="PlayIcon" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger SourceName="PlayIcon" Property="UIElement.IsMouseOver" Value="true">
                            <Setter TargetName="PlayIcon" Property="Opacity" Value="1" />
                        </Trigger>
                        <Trigger Property="UIElement.IsMouseOver" Value="false">
                            <Setter TargetName="Grid" Property="Background" Value="#181818" />
                            <Setter TargetName="PlayIcon" Property="Visibility" Value="Hidden" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SelectableRadioButtonStyle"
           BasedOn="{StaticResource MaterialDesignRadioButton}"
           TargetType="{x:Type RadioButton}">
        <Setter Property="Background" Value="#808080" />
        <Style.Triggers>
            <Trigger Property="UIElement.IsMouseOver" Value="true">
                <Setter Property="Foreground" Value="#ffc969" />
            </Trigger>
            <Trigger Property="IsChecked" Value="true">
                <Setter Property="Foreground" Value="#ffc969" />
                <Setter Property="Background" Value="#ffc969" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="SelectableArrowRadioButtonStyle"
           BasedOn="{StaticResource MaterialDesignTabRadioButtonRight}"
           TargetType="{x:Type RadioButton}">
        <Style.Triggers>
            <Trigger Property="UIElement.IsMouseOver" Value="true">
                <Setter Property="Foreground" Value="#ffc969" />
            </Trigger>
            <Trigger Property="IsChecked" Value="true">
                <Setter Property="Foreground" Value="#ffc969" />
                <!--<Setter Property="Background" Value="#ffc969" />-->
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ContentRadioButtonStyle" TargetType="{x:Type RadioButton}">
        <Setter Property="FrameworkElement.Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Grid>
                        <Rectangle Fill="Transparent" />
                        <materialDesign:PackIcon x:Name="ContentElement"
                                                 Width="22"
                                                 Height="22"
                                                 VerticalAlignment="Center"
                                                 Foreground="White"
                                                 Kind="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Tag}" />
                    </Grid>
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="Click">
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ContentElement" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <EasingDoubleKeyFrame KeyTime="0" Value="0.3" />
                                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <ControlTemplate.Triggers>
                        <Trigger Property="UIElement.IsMouseOver" Value="true">
                            <Setter TargetName="ContentElement" Property="Foreground" Value="#ffc969" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="ContentElement" Property="Foreground" Value="#ffc969" />
                        </Trigger>
                        <EventTrigger RoutedEvent="ButtonBase.Click">
                            <BeginStoryboard Storyboard="{StaticResource Click}" />
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SideBarLinkButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="#d1d1d1" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="FrameworkElement.Cursor" Value="Hand" />
        <Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource FocusVisual}" />
        <Setter Property="Height" Value="30" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="Margin" Value="10,5" />
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <ControlTemplate.Triggers>
                        <Trigger Property="UIElement.IsMouseOver" Value="true">
                            <Setter Property="Foreground" Value="#ffc969" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                    <ContentControl Content="{TemplateBinding Content}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="SortButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="#d1d1d1" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="FrameworkElement.Cursor" Value="Hand" />
        <Setter Property="Height" Value="30" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="Margin" Value="5,5" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <ControlTemplate.Triggers>
                        <Trigger Property="UIElement.IsMouseOver" Value="true">
                            <Setter Property="Foreground" Value="#ffc969" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                    <ContentControl Background="Transparent" Content="{TemplateBinding Content}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="PictureSelectButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="Transparent" />
        <Setter Property="FrameworkElement.Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <ContentControl HorizontalAlignment="Stretch"
                                    VerticalAlignment="Stretch"
                                    Content="{TemplateBinding Content}" />
                    <ControlTemplate.Triggers>
                        <Trigger Property="UIElement.IsMouseOver" Value="true">
                            <Setter Property="Foreground" Value="#ffc969" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="LargeButtonStyle" TargetType="Button">
        <Setter Property="Foreground" Value="#d1d1d1" />
        <Setter Property="Background" Value="#181818" />
        <Setter Property="Height" Value="90" />
        <Setter Property="Width" Value="90" />
        <Setter Property="FrameworkElement.Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Grid>
                        <materialDesign:Card x:Name="Card"
                                             Width="90"
                                             Height="90"
                                             materialDesign:ElevationAssist.Elevation="Dp4"
                                             materialDesign:ShadowAssist.ShadowEdges="Bottom,Right,Left"
                                             Background="#181818"
                                             Foreground="#d1d1d1">
                            <ContentControl Width="80"
                                            Height="80"
                                            Padding="5"
                                            HorizontalAlignment="Stretch"
                                            VerticalAlignment="Stretch"
                                            Content="{TemplateBinding Content}" />
                        </materialDesign:Card>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="UIElement.IsMouseOver" Value="true">
                            <Setter TargetName="Card" Property="Background" Value="#252525" />
                            <Setter TargetName="Card" Property="Foreground" Value="#ffc969" />
                        </Trigger>
                        <Trigger Property="UIElement.IsMouseOver" Value="false">
                            <Setter TargetName="Card" Property="Background" Value="#181818" />
                            <Setter TargetName="Card" Property="Foreground" Value="#d1d1d1" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Card" Property="Opacity" Value="0.5" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>